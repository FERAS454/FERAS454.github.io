<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Threat Hunting on Feras Jalalah</title><link>https://feras454.github.io/categories/threat-hunting/</link><description>Recent content in Threat Hunting on Feras Jalalah</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://feras454.github.io/categories/threat-hunting/index.xml" rel="self" type="application/rss+xml"/><item><title>Threat Hunting in Docker Uncovering Weaknesses</title><link>https://feras454.github.io/p/threat-hunting-in-docker-uncovering-weaknesses/</link><pubDate>Mon, 27 Nov 2023 00:00:00 +0000</pubDate><guid>https://feras454.github.io/p/threat-hunting-in-docker-uncovering-weaknesses/</guid><description>&lt;img src="https://feras454.github.io/p/threat-hunting-in-docker-uncovering-weaknesses/dockerr.webp" alt="Featured image of post Threat Hunting in Docker Uncovering Weaknesses" />&lt;p>Hi ðŸ‘‹, in this post, weâ€™ll explore common Docker misconfigurations attackers exploit to compromise systems, such as exposed APIs and privileged containers, with detection strategies for threat hunters.&lt;/p>
&lt;hr>
&lt;h2 id="exposed-docker-apis">Exposed Docker APIs
&lt;/h2>&lt;p>Exposing Docker&amp;rsquo;s API to the internet without authentication allows attackers full control over containers.&lt;/p>
&lt;h3 id="exploitation">Exploitation
&lt;/h3>&lt;p>Attackers use tools like &lt;strong>Shodan&lt;/strong> to find exposed APIs on ports &lt;strong>2375&lt;/strong> or &lt;strong>2376&lt;/strong> and create containers remotely:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl -X POST http://&amp;lt;docker_host_ip&amp;gt;:2375/containers/create -d &lt;span class="s1">&amp;#39;{&amp;#34;Image&amp;#34;:&amp;#34;alpine&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="detection">Detection
&lt;/h3>&lt;ol>
&lt;li>Use &lt;strong>Nmap&lt;/strong> to scan for open Docker API ports:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nmap -p &lt;span class="m">2375&lt;/span> --open &amp;lt;target_subnet&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>Monitor API logs for requests from external IPs.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="privileged-containers">Privileged Containers
&lt;/h2>&lt;p>Running containers in &lt;strong>privileged mode&lt;/strong> gives attackers root-level access to the host.&lt;/p>
&lt;h3 id="exploitation-1">Exploitation
&lt;/h3>&lt;p>An attacker inside a privileged container can mount the host&amp;rsquo;s root directory:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run --privileged -v /:/host --rm -it alpine chroot /host
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="detection-1">Detection
&lt;/h3>&lt;p>Identify privileged containers:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker inspect --format &lt;span class="s1">&amp;#39;{{ .HostConfig.Privileged }}&amp;#39;&lt;/span> &lt;span class="k">$(&lt;/span>docker ps -q&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="insecure-volume-mounts">Insecure Volume Mounts
&lt;/h2>&lt;p>Improper mounts of sensitive directories (like &lt;code>/etc&lt;/code> or &lt;code>/root&lt;/code>) give attackers access to critical host data.&lt;/p>
&lt;h3 id="exploitation-2">Exploitation
&lt;/h3>&lt;p>Attackers can mount the host file system:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -v /:/host --rm -it alpine /bin/sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat /host/etc/shadow
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="detection-2">Detection
&lt;/h3>&lt;p>Check for dangerous mounts:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker inspect --format &lt;span class="s1">&amp;#39;{{ .Mounts }}&amp;#39;&lt;/span> &lt;span class="k">$(&lt;/span>docker ps -q&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="cgroups-and-namespace-escapes">Cgroups and Namespace Escapes
&lt;/h2>&lt;p>Excessive privileges, like &lt;code>SYS_ADMIN&lt;/code>, can break Docker&amp;rsquo;s isolation.&lt;/p>
&lt;h3 id="exploitation-3">Exploitation
&lt;/h3>&lt;p>Run a container with the &lt;code>SYS_ADMIN&lt;/code> capability to escape to the host:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run --cap-add&lt;span class="o">=&lt;/span>SYS_ADMIN -it alpine /bin/sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="detection-3">Detection
&lt;/h3>&lt;p>Inspect running containers for dangerous capabilities:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker inspect --format &lt;span class="s1">&amp;#39;{{ .HostConfig.CapAdd }}&amp;#39;&lt;/span> &lt;span class="k">$(&lt;/span>docker ps -q&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="resource-exhaustion-denial-of-service">Resource Exhaustion: Denial of Service
&lt;/h2>&lt;p>Containers without resource limits can overwhelm system resources, leading to Denial of Service (DoS) attacks.&lt;/p>
&lt;h3 id="exploitation-4">Exploitation
&lt;/h3>&lt;p>Run a container to consume excessive CPU:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run --rm -it --cpu-shares&lt;span class="o">=&lt;/span>&lt;span class="m">1024&lt;/span> --memory&lt;span class="o">=&lt;/span>1g stress --cpu &lt;span class="m">8&lt;/span> --timeout &lt;span class="m">60&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="detection-4">Detection
&lt;/h3>&lt;p>Monitor resource usage with &lt;code>docker stats&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker stats
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>&lt;strong>References&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://docs.docker.com/engine/security/security/" target="_blank" rel="noopener"
>Docker Security Best Practices&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html" target="_blank" rel="noopener"
>Docker Security Cheat Sheet&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>